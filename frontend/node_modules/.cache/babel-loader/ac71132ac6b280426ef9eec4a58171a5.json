{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\Github\\\\Employee lookup\\\\frontend\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { saveAs } from 'file-saver';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployee] = useState([]);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const getEmployees = async () => {\n    const response = await axios.get('http://localhost:5000/employees');\n    setEmployee(response.data);\n  };\n  const deleteEmployee = async id => {\n    await axios.delete(`http://localhost:5000/employees/${id}`);\n    getEmployees();\n  };\n  async function printTickets(email) {\n    const {\n      data\n    } = await getTicketsPdf(email);\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    saveAs(blob, \"CV.pdf\");\n  }\n  async function getTicketsPdf(email) {\n    return axios.get(`http://localhost:5000/getPdf`, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        Email: email\n      },\n      responseType: 'arraybuffer'\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add\",\n      className: \"button is-primary mt-2\",\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      justify: \"space-between\",\n      id: \"outlined-basic\",\n      variant: \"outlined\",\n      label: \"Search\",\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => printTickets(employee.Email),\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/edit/${employee.id}`,\n              className: \"button is-small is-info\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(employee.id),\n              className: \"button is-small is-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeList, \"Tx8rGw+dwwFzfEWea0YFlM9tg6M=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["useState","useEffect","axios","Link","saveAs","TextField","EmployeeList","employees","setEmployee","getEmployees","response","get","data","deleteEmployee","id","delete","printTickets","email","getTicketsPdf","blob","Blob","type","headers","params","Email","responseType","map","employee","index","Name","Surname","Phone","Born"],"sources":["C:/Users/Simon/Desktop/Github/Employee lookup/frontend/src/components/List.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { saveAs } from 'file-saver'\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst EmployeeList = () => {\r\n    const [employees, setEmployee] = useState([]);\r\n \r\n    useEffect(() => {\r\n        getEmployees();\r\n    }, []);\r\n \r\n    const getEmployees = async () => {\r\n        const response = await axios.get('http://localhost:5000/employees');\r\n        setEmployee(response.data);\r\n    }\r\n \r\n    const deleteEmployee = async (id) => {\r\n        await axios.delete(`http://localhost:5000/employees/${id}`);\r\n        getEmployees();\r\n    }\r\n\r\n    async function printTickets(email) {\r\n        const { data } = await getTicketsPdf(email)\r\n        const blob = new Blob([data], { type: 'application/pdf' })\r\n        saveAs(blob, \"CV.pdf\")\r\n    }\r\n      \r\n    async function getTicketsPdf(email) {\r\n        return axios.get(`http://localhost:5000/getPdf`, {\r\n            headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n            },\r\n            params: {\r\n                Email: email\r\n            },\r\n            responseType: 'arraybuffer'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/add\" className=\"button is-primary mt-2\">Add New</Link>\r\n                <TextField\r\n                    justify=\"space-between\"\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    label=\"Search\"\r\n                    size=\"small\"\r\n                />\r\n            \r\n            <table className=\"table is-striped is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Surname</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>Born</th>\r\n                        <th>CV</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { employees.map((employee, index) => (\r\n                        <tr key={ employee.id }>\r\n                            <td>{ index + 1 }</td>\r\n                            <td>{ employee.Name }</td>\r\n                            <td>{ employee.Surname }</td>\r\n                            <td>{ employee.Email }</td>\r\n                            <td>{ employee.Phone }</td>\r\n                            <td>{ employee.Born }</td>\r\n                            <td><button onClick={()=>printTickets(employee.Email)}>Open</button></td>\r\n                            <td>\r\n                                <Link to={`/edit/${employee.id}`} className=\"button is-small is-info\">Edit</Link>\r\n                                <button onClick={ () => deleteEmployee(employee.id) } className=\"button is-small is-danger\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )) }\r\n                     \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeList"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZQ,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;IACnEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMZ,KAAK,CAACa,MAAM,CAAE,mCAAkCD,EAAG,EAAC,CAAC;IAC3DL,YAAY,EAAE;EAClB,CAAC;EAED,eAAeO,YAAY,CAACC,KAAK,EAAE;IAC/B,MAAM;MAAEL;IAAK,CAAC,GAAG,MAAMM,aAAa,CAACD,KAAK,CAAC;IAC3C,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACR,IAAI,CAAC,EAAE;MAAES,IAAI,EAAE;IAAkB,CAAC,CAAC;IAC1DjB,MAAM,CAACe,IAAI,EAAE,QAAQ,CAAC;EAC1B;EAEA,eAAeD,aAAa,CAACD,KAAK,EAAE;IAChC,OAAOf,KAAK,CAACS,GAAG,CAAE,8BAA6B,EAAE;MAC7CW,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,MAAM,EAAE;QACJC,KAAK,EAAEP;MACX,CAAC;MACDQ,YAAY,EAAE;IAClB,CAAC,CAAC;EACN;EAEA,oBACI;IAAA,wBACI,QAAC,IAAI;MAAC,EAAE,EAAC,MAAM;MAAC,SAAS,EAAC,wBAAwB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eAC7D,QAAC,SAAS;MACN,OAAO,EAAC,eAAe;MACvB,EAAE,EAAC,gBAAgB;MACnB,OAAO,EAAC,UAAU;MAClB,KAAK,EAAC,QAAQ;MACd,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QACd,eAEN;MAAO,SAAS,EAAC,+BAA+B;MAAA,wBAC5C;QAAA,uBACI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eACX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eAChB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eACX;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACMlB,SAAS,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5B;UAAA,wBACI;YAAA,UAAMA,KAAK,GAAG;UAAC;YAAA;YAAA;YAAA;UAAA,QAAO,eACtB;YAAA,UAAMD,QAAQ,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA,QAAO,eAC1B;YAAA,UAAMF,QAAQ,CAACG;UAAO;YAAA;YAAA;YAAA;UAAA,QAAO,eAC7B;YAAA,UAAMH,QAAQ,CAACH;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,eAC3B;YAAA,UAAMG,QAAQ,CAACI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,eAC3B;YAAA,UAAMJ,QAAQ,CAACK;UAAI;YAAA;YAAA;YAAA;UAAA,QAAO,eAC1B;YAAA,uBAAI;cAAQ,OAAO,EAAE,MAAIhB,YAAY,CAACW,QAAQ,CAACH,KAAK,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAc;YAAA;YAAA;YAAA;UAAA,QAAK,eACzE;YAAA,wBACI,QAAC,IAAI;cAAC,EAAE,EAAG,SAAQG,QAAQ,CAACb,EAAG,EAAE;cAAC,SAAS,EAAC,yBAAyB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAY,eACjF;cAAQ,OAAO,EAAG,MAAMD,cAAc,CAACc,QAAQ,CAACb,EAAE,CAAG;cAAC,SAAS,EAAC,2BAA2B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1G;QAAA,GAXCa,QAAQ,CAACb,EAAE;UAAA;UAAA;UAAA;QAAA,QAaxB;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEd,CAAC;AAAA,GAhFKR,YAAY;AAAA,KAAZA,YAAY;AAkFlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}